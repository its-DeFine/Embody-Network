services:
  # Ollama for local LLM inference with GPU support
  ollama:
    image: ollama/ollama:latest
    container_name: byoc-ollama
    runtime: nvidia
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_ORIGINS=*
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    restart: unless-stopped
    networks:
      - default
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Ollama model loader - pulls model after Ollama is ready
  ollama-loader:
    image: curlimages/curl:latest
    container_name: byoc-ollama-loader
    depends_on:
      ollama:
        condition: service_healthy
    networks:
      - default
    entrypoint: >
      sh -c "
        echo 'Waiting for Ollama to be ready...' &&
        sleep 5 &&
        echo 'Pulling CodeLlama 34B Q4_K_M model (this will take 15-30 minutes for ~18GB download)...' &&
        curl -X POST http://ollama:11434/api/pull -d '{\"name\": \"codellama:34b-instruct-q4_k_m\"}' -w '\\n' &&
        echo 'Waiting for model download to complete...' &&
        sleep 60 &&
        echo 'Loading CodeLlama 34B into memory with 15m keep-alive...' &&
        curl -X POST http://ollama:11434/api/generate -d '{\"model\": \"codellama:34b-instruct-q4_k_m\", \"prompt\": \"Hello, write a simple Python function\", \"stream\": false, \"keep_alive\": \"15m\"}' -w '\\n' &&
        echo 'CodeLlama 34B loaded successfully with 15 minute keep-alive' &&
        echo 'Periodically refreshing model to keep it loaded...' &&
        while true; do
          sleep 600;
          echo 'Refreshing CodeLlama 34B keep-alive...';
          curl -s -X POST http://ollama:11434/api/generate -d '{\"model\": \"codellama:34b-instruct-q4_k_m\", \"prompt\": \"test\", \"stream\": false, \"keep_alive\": \"15m\"}' > /dev/null;
        done
      "
    restart: "unless-stopped"

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: byoc-agent-net-test-worker
    ports:
      - 9876:9876
    environment:
      - "ORCH_URL=https://orchestrator:9995"
      - "ORCH_SECRET=orch-secret"
      - "CAPABILITY_NAME=agent-net"
      - "CAPABILITY_DESCRIPTION=Agent network capability with GPU uptime monitoring"
      - "CAPABILITY_URL=http://worker:9876"
      - "CAPABILITY_PRICE_PER_UNIT=0 "
      - "CAPABILITY_PRICE_SCALING=1"
      - "CAPABILITY_CAPACITY=10"
      - "PYTHONUNBUFFERED=1"

    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    runtime: nvidia
  
volumes:
  ollama_data:

networks:
  default:
    name: byoc
    external: true