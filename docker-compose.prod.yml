# Production Docker Compose Configuration
# Use with: docker compose -f docker-compose.yml -f docker-compose.prod.yml up

version: '3.8'

services:
  # Production overrides
  api-gateway:
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - ENABLE_METRICS=true
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  core-engine:
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  agent-manager:
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '2.0'
          memory: 2G

  # OpenBB Adapter Service
  openbb-adapter:
    build:
      context: .
      dockerfile: services/openbb-adapter/Dockerfile
    container_name: openbb-adapter
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672/
      - CACHE_TTL=3600
    ports:
      - "8003:8003"
    networks:
      - autogen-network
    depends_on:
      - redis
      - rabbitmq
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    restart: unless-stopped

  # Production monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - autogen-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - autogen-network
    restart: unless-stopped

  # Production Redis with persistence
  redis:
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # Production RabbitMQ with persistence
  rabbitmq:
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  prometheus_data:
  grafana_data:
  redis_data:
  rabbitmq_data: