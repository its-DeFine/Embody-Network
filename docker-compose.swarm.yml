# Docker Swarm Multi-Host Deployment
# This configuration uses Docker Swarm mode for native multi-host container orchestration

version: '3.8'

services:
  # Redis - Shared state store
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --bind 0.0.0.0
    volumes:
      - redis-data:/data
    networks:
      - autogen-overlay
    ports:
      - target: 6379
        published: 6379
        protocol: tcp
        mode: ingress
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.role == redis
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}

  # Central Manager - Control node
  central-manager:
    image: autogen-platform:latest
    networks:
      - autogen-overlay
    ports:
      - target: 8000
        published: 8000
        protocol: tcp
        mode: ingress
    environment:
      # Swarm service discovery
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=sqlite:///./autogen.db
      - ENABLE_DISTRIBUTED=true
      - DISCOVERY_INTERVAL=30
      - HEALTH_CHECK_INTERVAL=15
      - REBALANCE_INTERVAL=300
      
      # Security
      - JWT_SECRET=${JWT_SECRET:-super-secret-jwt-key-for-autogen-platform-2024-32chars}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-default-admin-password-change-in-production-32chars!}
      - MASTER_SECRET_KEY=${MASTER_SECRET_KEY:-master-secret-key-for-secure-inter-instance-comm-32chars!}
      
      # Swarm mode configuration
      - SWARM_MODE=true
      - CLUSTER_PORT=8000
      - LOG_LEVEL=INFO
      
    volumes:
      - ./app:/app/app
      - ./keys:/app/keys
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
    labels:
      - "autogen.role=central-manager"

  # Trading Agent Containers
  trading-agents:
    image: autogen-agent:latest
    networks:
      - autogen-overlay
    environment:
      # Agent configuration
      - AGENT_TYPE=trading
      - AGENT_PORT=8001
      - REDIS_URL=redis://redis:6379
      - CENTRAL_MANAGER_URL=http://central-manager:8000
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-default-admin-password-change-in-production-32chars!}
      
      # Swarm configuration
      - CONTAINER_NAME=trading-agent-{{.Task.Slot}}
      - AGENT_ID=trading-agent-{{.Task.Slot}}
      - SWARM_MODE=true
      - AUTO_REGISTER=true
      - HEARTBEAT_INTERVAL=30
      
      # Agent specific config
      - AGENT_CONFIG={"capabilities":["trading","market_analysis"],"max_agents":5}
      
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.labels.agent-type == trading
        preferences:
          - spread: node.labels.zone
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
    labels:
      - "autogen.agent.capable=true"
      - "autogen.agent.type=trading"

  # Analysis Agent Containers
  analysis-agents:
    image: autogen-agent:latest
    networks:
      - autogen-overlay
    environment:
      # Agent configuration
      - AGENT_TYPE=analysis
      - AGENT_PORT=8001
      - REDIS_URL=redis://redis:6379
      - CENTRAL_MANAGER_URL=http://central-manager:8000
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-default-admin-password-change-in-production-32chars!}
      
      # Swarm configuration
      - CONTAINER_NAME=analysis-agent-{{.Task.Slot}}
      - AGENT_ID=analysis-agent-{{.Task.Slot}}
      - SWARM_MODE=true
      - AUTO_REGISTER=true
      - HEARTBEAT_INTERVAL=30
      
      # Agent specific config
      - AGENT_CONFIG={"capabilities":["analysis","gpu_compute"],"max_agents":3}
      
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.labels.agent-type == analysis
        preferences:
          - spread: node.labels.zone
      resources:
        limits:
          cpus: '4'
          memory: 4G
        reservations:
          cpus: '2'
          memory: 2G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
    labels:
      - "autogen.agent.capable=true"
      - "autogen.agent.type=analysis"

  # Risk Management Agent Containers
  risk-agents:
    image: autogen-agent:latest
    networks:
      - autogen-overlay
    environment:
      # Agent configuration
      - AGENT_TYPE=risk
      - AGENT_PORT=8001
      - REDIS_URL=redis://redis:6379
      - CENTRAL_MANAGER_URL=http://central-manager:8000
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-default-admin-password-change-in-production-32chars!}
      
      # Swarm configuration
      - CONTAINER_NAME=risk-agent-{{.Task.Slot}}
      - AGENT_ID=risk-agent-{{.Task.Slot}}
      - SWARM_MODE=true
      - AUTO_REGISTER=true
      - HEARTBEAT_INTERVAL=30
      
      # Agent specific config
      - AGENT_CONFIG={"capabilities":["risk_analysis","compliance"],"max_agents":2}
      
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.agent-type == risk
        preferences:
          - spread: node.labels.zone
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
    labels:
      - "autogen.agent.capable=true"
      - "autogen.agent.type=risk"

  # Optional: Load Balancer/Proxy
  traefik:
    image: traefik:v2.9
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    networks:
      - autogen-overlay
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure

networks:
  autogen-overlay:
    driver: overlay
    attachable: true
    ipam:
      config:
        - subnet: 10.0.9.0/24

volumes:
  redis-data:
    driver: local

# Optional: Configs for secret management
configs:
  autogen_config:
    external: true
  
secrets:
  jwt_secret:
    external: true
  admin_password:
    external: true