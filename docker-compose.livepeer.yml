version: '3.8'

services:
  # Livepeer Gateway - Manages orchestrator connectivity
  livepeer-gateway:
    image: livepeer/go-livepeer:latest
    container_name: livepeer-gateway
    hostname: livepeer-gateway
    networks:
      - central-network
      - orchestrator-network
    environment:
      # Livepeer Configuration
      - LP_ETH_URL=${ETH_RPC_URL:-https://mainnet.infura.io/v3/YOUR_INFURA_KEY}
      - LP_ETH_ACCT_ADDR=${ETH_ACCOUNT_ADDRESS}
      - LP_ETH_PASSWORD=${ETH_PASSWORD}
      - LP_NETWORK=${LIVEPEER_NETWORK:-mainnet}
      - LP_ORCHESTRATOR=${IS_ORCHESTRATOR:-false}
      - LP_TRANSCODER=${IS_TRANSCODER:-false}
      - LP_GATEWAY=${IS_GATEWAY:-true}
      - LP_BROADCASTER=${IS_BROADCASTER:-false}
      
      # Connectivity Configuration
      - LP_HTTP_ADDR=0.0.0.0:8935
      - LP_RTMP_ADDR=0.0.0.0:1935
      - LP_CLI_ADDR=0.0.0.0:7935
      
      # Manager Integration
      - MANAGER_URL=http://central-manager:8000
      - ORCHESTRATOR_ID=livepeer-gateway
      - CONNECTIVITY_PROOF_ENABLED=true
      - PROOF_INTERVAL=60
      
      # Performance
      - LP_MAX_SESSIONS=${MAX_SESSIONS:-10}
      - LP_MAX_PRICE_PER_UNIT=${MAX_PRICE:-1000}
      - LP_MIN_DEPOSIT=${MIN_DEPOSIT:-1}
      
    ports:
      - "8935:8935"  # HTTP API
      - "1935:1935"   # RTMP
      - "7935:7935"   # CLI
    volumes:
      - livepeer-data:/root/.lpData
      - ./livepeer-config:/config:ro
    command: >
      -gateway
      -httpAddr 0.0.0.0:8935
      -rtmpAddr 0.0.0.0:1935
      -cliAddr 0.0.0.0:7935
      -v 4
    restart: unless-stopped
    labels:
      - "orchestrator.type=gateway"
      - "orchestrator.capability=livepeer"
  
  # Livepeer Orchestrator Monitor - Tracks orchestrator status
  orchestrator-monitor:
    build:
      context: .
      dockerfile: Dockerfile.manager
    container_name: orchestrator-monitor
    hostname: orchestrator-monitor
    networks:
      - central-network
      - orchestrator-network
    environment:
      - REDIS_URL=redis://redis:6379
      - MANAGER_URL=http://central-manager:8000
      - MONITOR_MODE=orchestrator
      - CHECK_INTERVAL=30
      - PROOF_VALIDATION=true
      - LOG_LEVEL=INFO
    command: python -m scripts.utilities.multi_orchestrator_manager --action monitor
    depends_on:
      - redis
      - central-manager
      - livepeer-gateway
    restart: unless-stopped
    volumes:
      - ./scripts:/app/scripts:ro
      - ./app:/app/app:ro
  
  # Livepeer Proxy - Load balancer for orchestrators
  livepeer-proxy:
    image: nginx:alpine
    container_name: livepeer-proxy
    hostname: livepeer-proxy
    networks:
      - central-network
      - orchestrator-network
    ports:
      - "8936:80"  # Proxy endpoint
    volumes:
      - ./docker/livepeer/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/livepeer/upstream.conf:/etc/nginx/conf.d/upstream.conf:ro
    depends_on:
      - livepeer-gateway
    restart: unless-stopped
    labels:
      - "orchestrator.type=proxy"
      - "orchestrator.capability=load_balancing"

networks:
  central-network:
    external: true
    name: central-network
  orchestrator-network:
    name: orchestrator-network
    driver: bridge

volumes:
  livepeer-data: