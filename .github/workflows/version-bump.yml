name: Automatic Version Bump

on:
  push:
    branches:
      - main
      - master
      - embody-alpha
    paths-ignore:
      - 'VERSION'
      - '**/*.md'
      - '.github/workflows/*'

jobs:
  version-bump:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      
      - name: Get current version
        id: current_version
        run: |
          if [ -f VERSION ]; then
            echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT
          else
            echo "version=0.1.0" >> $GITHUB_OUTPUT
          fi
      
      - name: Determine version bump type
        id: bump_type
        run: |
          # Check commit messages for version hints
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          
          if echo "$COMMIT_MSG" | grep -qE "BREAKING CHANGE|breaking:|!:"; then
            echo "type=major" >> $GITHUB_OUTPUT
          elif echo "$COMMIT_MSG" | grep -qE "^feat(\(.*\))?:"; then
            echo "type=minor" >> $GITHUB_OUTPUT
          elif echo "$COMMIT_MSG" | grep -qE "^fix(\(.*\))?:"; then
            echo "type=patch" >> $GITHUB_OUTPUT
          elif echo "$COMMIT_MSG" | grep -qE "^(docs|style|refactor|perf|test|chore)(\(.*\))?:"; then
            echo "type=patch" >> $GITHUB_OUTPUT
          else
            echo "type=patch" >> $GITHUB_OUTPUT
          fi
      
      - name: Calculate new version
        id: new_version
        run: |
          CURRENT_VERSION="${{ steps.current_version.outputs.version }}"
          BUMP_TYPE="${{ steps.bump_type.outputs.type }}"
          
          # Parse current version
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          
          # Bump version based on type
          case $BUMP_TYPE in
            major)
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
              ;;
            minor)
              MINOR=$((MINOR + 1))
              PATCH=0
              ;;
            patch)
              PATCH=$((PATCH + 1))
              ;;
          esac
          
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
      - name: Update VERSION file
        run: |
          echo "${{ steps.new_version.outputs.version }}" > VERSION
          
      - name: Commit version bump
        run: |
          git add VERSION
          git commit -m "chore: bump version to ${{ steps.new_version.outputs.version }} [skip ci]"
          
      - name: Push changes
        run: |
          git push origin HEAD:${{ github.ref }}
          
      - name: Create tag
        run: |
          git tag "v${{ steps.new_version.outputs.version }}"
          git push origin "v${{ steps.new_version.outputs.version }}"
          
      - name: Output version
        run: |
          echo "Version bumped to: ${{ steps.new_version.outputs.version }}"